# Module 'Entry'
# Entry is program launch point
# Excutable binary

set(NB_CURRENT_MODULE_NAME "Entry")

# Initialize source cache
set(NB_MODULE_CUR_PUBLIC_HEADERS)
set(NB_MODULE_CUR_PUBLIC_SOURCES)
set(NB_MODULE_CUR_PRIVATE_HEADERS)
set(NB_MODULE_CUR_PRIVATE_SOURCES)

# Appending cache from public/private sources 
add_subdirectory("Public")
add_subdirectory("Private")

# Source grouping for IDE
NB_FUNC_GROUP_SOURCE("${NB_MODULE_CUR_PUBLIC_HEADERS}" "${CMAKE_CURRENT_LIST_DIR}")
NB_FUNC_GROUP_SOURCE("${NB_MODULE_CUR_PUBLIC_SOURCES}" "${CMAKE_CURRENT_LIST_DIR}")
NB_FUNC_GROUP_SOURCE("${NB_MODULE_CUR_PRIVATE_HEADERS}" "${CMAKE_CURRENT_LIST_DIR}")
NB_FUNC_GROUP_SOURCE("${NB_MODULE_CUR_PRIVATE_SOURCES}" "${CMAKE_CURRENT_LIST_DIR}")

# Build as excutable
add_executable(${NB_CURRENT_MODULE_NAME} 
    ${NB_MODULE_CUR_PUBLIC_HEADERS} ${NB_MODULE_CUR_PUBLIC_SOURCES}
    ${NB_MODULE_CUR_PRIVATE_HEADERS} ${NB_MODULE_CUR_PRIVATE_SOURCES}
)  

include_directories("${CMAKE_CURRENT_LIST_DIR}/Public")
include_directories("${CMAKE_CURRENT_LIST_DIR}/Private")

set_target_properties( ${NB_CURRENT_MODULE_NAME} PROPERTIES
    ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/${NB_MODULE_OUTPUT_DIR}/$<CONFIG>/Modules/${NB_CURRENT_MODULE_NAME}/Lib"
    LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/${NB_MODULE_OUTPUT_DIR}/$<CONFIG>/Modules/${NB_CURRENT_MODULE_NAME}/Lib"
    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/${NB_MODULE_OUTPUT_DIR}/$<CONFIG>"
    LINKER_LANGUAGE CXX
    FOLDER Modules
)

add_dependencies(${NB_CURRENT_MODULE_NAME} "NewbieEngine")
NB_STATIC_LIBRARY_FILE_NAME("NewbieEngine" NB_NEWBIE_ENGINE_STATIC)
target_link_libraries(${NB_CURRENT_MODULE_NAME} "${CMAKE_SOURCE_DIR}/${NB_MODULE_OUTPUT_DIR}/$<CONFIG>/Modules/NewbieEngine/Lib/${NB_NEWBIE_ENGINE_STATIC}")
include_directories("${CMAKE_SOURCE_DIR}/${NB_MODULE_OUTPUT_DIR}/$<CONFIG>/Modules/NewbieEngine/Include")

# Setup as startup project in MSVC
if(MSVC)
    set_property(DIRECTORY ${CMAKE_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT ${NB_CURRENT_MODULE_NAME})
endif()
